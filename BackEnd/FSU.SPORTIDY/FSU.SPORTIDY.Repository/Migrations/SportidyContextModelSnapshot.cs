// <auto-generated />
using System;
using FSU.SPORTIDY.Repository.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FSU.SPORTIDY.Repository.Migrations
{
    [DbContext(typeof(SportidyContext))]
    partial class SportidyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FSU.SPORTIDY.Repository.Entities.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .HasColumnType("int")
                        .HasColumnName("BookingID");

                    b.Property<int?>("BarCode")
                        .HasColumnType("int");

                    b.Property<int?>("BookingCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BookingDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateStart")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<int>("PlayFieldId")
                        .HasColumnType("int")
                        .HasColumnName("PlayFieldID");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("BookingId")
                        .HasName("PK__Booking__73951ACD27B15586");

                    b.HasIndex("PlayFieldId");

                    b.ToTable("Booking", (string)null);
                });

            modelBuilder.Entity("FSU.SPORTIDY.Repository.Entities.Club", b =>
                {
                    b.Property<int>("ClubId")
                        .HasColumnType("int");

                    b.Property<string>("AvartarClub")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("ClubCode")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("ClubName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("CoverImageClub")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<DateOnly?>("CreateDate")
                        .HasColumnType("date");

                    b.Property<string>("Infomation")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Location")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("MainSport")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Regulation")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Slogan")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("TotalMember")
                        .HasColumnType("int");

                    b.HasKey("ClubId")
                        .HasName("PK__Club__D35058E79F8F62DE");

                    b.ToTable("Club", (string)null);
                });

            modelBuilder.Entity("FSU.SPORTIDY.Repository.Entities.CommentInMeeting", b =>
                {
                    b.Property<int>("CommentId")
                        .HasColumnType("int")
                        .HasColumnName("CommentID");

                    b.Property<string>("CommentCode")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("CommentDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Content")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Image")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int>("MeetingId")
                        .HasColumnType("int")
                        .HasColumnName("MeetingID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("CommentId")
                        .HasName("PK__CommentI__C3B4DFAA471104AD");

                    b.HasIndex("MeetingId");

                    b.ToTable("CommentInMeeting", (string)null);
                });

            modelBuilder.Entity("FSU.SPORTIDY.Repository.Entities.Friendship", b =>
                {
                    b.Property<int>("FriendShipId")
                        .HasColumnType("int")
                        .HasColumnName("FriendShipID");

                    b.Property<DateOnly?>("CreateDate")
                        .HasColumnType("date");

                    b.Property<string>("FriendShipCode")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserId1")
                        .HasColumnType("int")
                        .HasColumnName("UserID1");

                    b.Property<int>("UserId2")
                        .HasColumnType("int")
                        .HasColumnName("UserID2");

                    b.HasKey("FriendShipId")
                        .HasName("PK__Friendsh__190D637884858AB7");

                    b.HasIndex("UserId1");

                    b.HasIndex("UserId2");

                    b.ToTable("Friendship", (string)null);
                });

            modelBuilder.Entity("FSU.SPORTIDY.Repository.Entities.ImageField", b =>
                {
                    b.Property<int>("ImageId")
                        .HasColumnType("int")
                        .HasColumnName("ImageID");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("ImageURL");

                    b.Property<bool?>("IsSportlight")
                        .HasColumnType("bit");

                    b.Property<int?>("PlayFieldId")
                        .HasColumnType("int")
                        .HasColumnName("PlayFieldID");

                    b.Property<int?>("VideoUrl")
                        .HasColumnType("int")
                        .HasColumnName("VideoURL");

                    b.HasKey("ImageId")
                        .HasName("PK__ImageFie__7516F4EC9A3F7261");

                    b.HasIndex("PlayFieldId");

                    b.ToTable("ImageField", (string)null);
                });

            modelBuilder.Entity("FSU.SPORTIDY.Repository.Entities.Meeting", b =>
                {
                    b.Property<int>("MeetingId")
                        .HasColumnType("int")
                        .HasColumnName("MeetingID");

                    b.Property<string>("Address")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("CancelBefore")
                        .HasColumnType("int");

                    b.Property<int?>("ClubId")
                        .HasColumnType("int")
                        .HasColumnName("ClubID");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Host")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<string>("MeetingCode")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("MeetingImage")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("MeetingName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Note")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("SportId")
                        .HasColumnType("int")
                        .HasColumnName("SportID");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("TotalMember")
                        .HasColumnType("int");

                    b.HasKey("MeetingId")
                        .HasName("PK__Meeting__E9F9E9AC468584B2");

                    b.ToTable("Meeting", (string)null);
                });

            modelBuilder.Entity("FSU.SPORTIDY.Repository.Entities.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .HasColumnType("int")
                        .HasColumnName("NotificationID");

                    b.Property<DateTime?>("InviteDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsAccept")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("NotificationCode")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.Property<bool?>("NotificationType")
                        .HasColumnType("bit");

                    b.Property<string>("Tiltle")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("NotificationId")
                        .HasName("PK__Notifica__20CF2E32B70E75BB");

                    b.HasIndex("UserId");

                    b.ToTable("Notification", (string)null);
                });

            modelBuilder.Entity("FSU.SPORTIDY.Repository.Entities.PlayField", b =>
                {
                    b.Property<int>("PlayFieldId")
                        .HasColumnType("int")
                        .HasColumnName("PlayFieldID");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("CloseTime")
                        .HasColumnType("int");

                    b.Property<int?>("OpenTime")
                        .HasColumnType("int");

                    b.Property<string>("PlayFieldCode")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("PlayFieldName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("PlayFieldId")
                        .HasName("PK__PlayFiel__4E6EFC93249A0D85");

                    b.HasIndex("UserId");

                    b.ToTable("PlayField", (string)null);
                });

            modelBuilder.Entity("FSU.SPORTIDY.Repository.Entities.PlayFieldFeedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .HasColumnType("int")
                        .HasColumnName("FeedbackID");

                    b.Property<int>("BookingId")
                        .HasColumnType("int")
                        .HasColumnName("BookingID");

                    b.Property<string>("Content")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("FeedbackCode")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("FeedbackDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ImageUrl")
                        .HasColumnType("int")
                        .HasColumnName("ImageURL");

                    b.Property<bool?>("IsAnonymous")
                        .HasColumnType("bit")
                        .HasColumnName("IsAnonymous_");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<int?>("VideoUrl")
                        .HasColumnType("int")
                        .HasColumnName("VideoURL");

                    b.HasKey("FeedbackId")
                        .HasName("PK__PlayFiel__6A4BEDF64C6D3772");

                    b.HasIndex("BookingId");

                    b.ToTable("PlayFieldFeedback", (string)null);
                });

            modelBuilder.Entity("FSU.SPORTIDY.Repository.Entities.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId")
                        .HasName("PK__Role__8AFACE3A038ACFA2");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("FSU.SPORTIDY.Repository.Entities.Sport", b =>
                {
                    b.Property<int>("SportId")
                        .HasColumnType("int")
                        .HasColumnName("SportID");

                    b.Property<int?>("SportCode")
                        .HasColumnType("int");

                    b.Property<int?>("SportIamge")
                        .HasColumnType("int");

                    b.Property<int?>("SportName")
                        .HasColumnType("int");

                    b.HasKey("SportId")
                        .HasName("PK__Sport__7A41AF1C1AA63361");

                    b.ToTable("Sport", (string)null);
                });

            modelBuilder.Entity("FSU.SPORTIDY.Repository.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Avartar")
                        .HasMaxLength(2000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2000)");

                    b.Property<DateOnly?>("Birtday")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("CreateDate")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("FullName")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("Otp")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("OTP");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserCode")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("UserId")
                        .HasName("PK__User__1788CCACB5F6D77C");

                    b.HasIndex("RoleId");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("FSU.SPORTIDY.Repository.Entities.UserClub", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<int>("ClubId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsLeader")
                        .HasColumnType("bit");

                    b.HasKey("UserId", "ClubId")
                        .HasName("PK__UserClub__7ABDC9227D05295A");

                    b.HasIndex("ClubId");

                    b.ToTable("UserClub", (string)null);
                });

            modelBuilder.Entity("FSU.SPORTIDY.Repository.Entities.UserMeeting", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<int>("MeetingId")
                        .HasColumnType("int")
                        .HasColumnName("MeetingID");

                    b.Property<int?>("ClubId")
                        .HasColumnType("int")
                        .HasColumnName("ClubID");

                    b.Property<string>("RoleInMeeting")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("RoleInMeeting");

                    b.HasKey("UserId", "MeetingId")
                        .HasName("PK__UserMeet__C9175236CBB90D5E");

                    b.HasIndex("MeetingId");

                    b.ToTable("UserMeeting", (string)null);
                });

            modelBuilder.Entity("FSU.SPORTIDY.Repository.Entities.UserToken", b =>
                {
                    b.Property<int>("UserTokenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserTokenId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserTokenId"));

                    b.Property<string>("AccessToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AccessToken");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreateDate");

                    b.Property<string>("ExpiredTimeAccessToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExpAccessToken");

                    b.Property<string>("ExpiredTimeRefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExpRefreshToken");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("RefreshToken");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("UserTokenId")
                        .HasName("PK__UserToken__C423424FG41");

                    b.ToTable("UserToken", (string)null);
                });

            modelBuilder.Entity("UserSport", b =>
                {
                    b.Property<int>("SportId")
                        .HasColumnType("int")
                        .HasColumnName("SportID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("SportId", "UserId")
                        .HasName("PK__UserSpor__AB3923D6A026E1F3");

                    b.HasIndex("UserId");

                    b.ToTable("UserSport", (string)null);
                });

            modelBuilder.Entity("FSU.SPORTIDY.Repository.Entities.Booking", b =>
                {
                    b.HasOne("FSU.SPORTIDY.Repository.Entities.PlayField", "PlayField")
                        .WithMany("Bookings")
                        .HasForeignKey("PlayFieldId")
                        .IsRequired()
                        .HasConstraintName("FK__Booking__PlayFie__5070F446");

                    b.Navigation("PlayField");
                });

            modelBuilder.Entity("FSU.SPORTIDY.Repository.Entities.CommentInMeeting", b =>
                {
                    b.HasOne("FSU.SPORTIDY.Repository.Entities.Meeting", "Meeting")
                        .WithMany("CommentInMeetings")
                        .HasForeignKey("MeetingId")
                        .IsRequired()
                        .HasConstraintName("FK__CommentIn__Meeti__534D60F1");

                    b.Navigation("Meeting");
                });

            modelBuilder.Entity("FSU.SPORTIDY.Repository.Entities.Friendship", b =>
                {
                    b.HasOne("FSU.SPORTIDY.Repository.Entities.User", "UserId1Navigation")
                        .WithMany("FriendshipUserId1Navigations")
                        .HasForeignKey("UserId1")
                        .IsRequired()
                        .HasConstraintName("FK__Friendshi__UserI__5441852A");

                    b.HasOne("FSU.SPORTIDY.Repository.Entities.User", "UserId2Navigation")
                        .WithMany("FriendshipUserId2Navigations")
                        .HasForeignKey("UserId2")
                        .IsRequired()
                        .HasConstraintName("FK__Friendshi__UserI__5535A963");

                    b.Navigation("UserId1Navigation");

                    b.Navigation("UserId2Navigation");
                });

            modelBuilder.Entity("FSU.SPORTIDY.Repository.Entities.ImageField", b =>
                {
                    b.HasOne("FSU.SPORTIDY.Repository.Entities.PlayField", "PlayField")
                        .WithMany("ImageFields")
                        .HasForeignKey("PlayFieldId")
                        .HasConstraintName("FK__ImageFiel__PlayF__4316F928");

                    b.Navigation("PlayField");
                });

            modelBuilder.Entity("FSU.SPORTIDY.Repository.Entities.Notification", b =>
                {
                    b.HasOne("FSU.SPORTIDY.Repository.Entities.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Notificat__UserI__571DF1D5");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FSU.SPORTIDY.Repository.Entities.PlayField", b =>
                {
                    b.HasOne("FSU.SPORTIDY.Repository.Entities.User", "User")
                        .WithMany("PlayFields")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_PlayField_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FSU.SPORTIDY.Repository.Entities.PlayFieldFeedback", b =>
                {
                    b.HasOne("FSU.SPORTIDY.Repository.Entities.Booking", "Booking")
                        .WithMany("PlayFieldFeedbacks")
                        .HasForeignKey("BookingId")
                        .IsRequired()
                        .HasConstraintName("FK__PlayField__Booki__59063A47");

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("FSU.SPORTIDY.Repository.Entities.User", b =>
                {
                    b.HasOne("FSU.SPORTIDY.Repository.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__User__RoleID__59FA5E80");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("FSU.SPORTIDY.Repository.Entities.UserClub", b =>
                {
                    b.HasOne("FSU.SPORTIDY.Repository.Entities.Club", "Club")
                        .WithMany("UserClubs")
                        .HasForeignKey("ClubId")
                        .IsRequired()
                        .HasConstraintName("FK__UserClub__ClubId__5AEE82B9");

                    b.HasOne("FSU.SPORTIDY.Repository.Entities.User", "User")
                        .WithMany("UserClubs")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserClub__UserID__5BE2A6F2");

                    b.Navigation("Club");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FSU.SPORTIDY.Repository.Entities.UserMeeting", b =>
                {
                    b.HasOne("FSU.SPORTIDY.Repository.Entities.Meeting", "Meeting")
                        .WithMany("UserMeetings")
                        .HasForeignKey("MeetingId")
                        .IsRequired()
                        .HasConstraintName("FK__UserMeeti__Meeti__5CD6CB2B");

                    b.HasOne("FSU.SPORTIDY.Repository.Entities.User", "User")
                        .WithMany("UserMeetings")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserMeeti__UserI__5DCAEF64");

                    b.Navigation("Meeting");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UserSport", b =>
                {
                    b.HasOne("FSU.SPORTIDY.Repository.Entities.Sport", null)
                        .WithMany()
                        .HasForeignKey("SportId")
                        .IsRequired()
                        .HasConstraintName("FK__UserSport__Sport__5EBF139D");

                    b.HasOne("FSU.SPORTIDY.Repository.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserSport__UserI__5FB337D6");
                });

            modelBuilder.Entity("FSU.SPORTIDY.Repository.Entities.Booking", b =>
                {
                    b.Navigation("PlayFieldFeedbacks");
                });

            modelBuilder.Entity("FSU.SPORTIDY.Repository.Entities.Club", b =>
                {
                    b.Navigation("UserClubs");
                });

            modelBuilder.Entity("FSU.SPORTIDY.Repository.Entities.Meeting", b =>
                {
                    b.Navigation("CommentInMeetings");

                    b.Navigation("UserMeetings");
                });

            modelBuilder.Entity("FSU.SPORTIDY.Repository.Entities.PlayField", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("ImageFields");
                });

            modelBuilder.Entity("FSU.SPORTIDY.Repository.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("FSU.SPORTIDY.Repository.Entities.User", b =>
                {
                    b.Navigation("FriendshipUserId1Navigations");

                    b.Navigation("FriendshipUserId2Navigations");

                    b.Navigation("Notifications");

                    b.Navigation("PlayFields");

                    b.Navigation("UserClubs");

                    b.Navigation("UserMeetings");
                });
#pragma warning restore 612, 618
        }
    }
}
